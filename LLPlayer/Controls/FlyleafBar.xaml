<UserControl x:Class="LLPlayer.Controls.FlyleafBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:LLPlayer.Controls"
             mc:Ignorable="d"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DataContext="{d:DesignInstance local:FlyleafBar}"
             d:Foreground="White"
             d:Background="Black"
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/Slider.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <materialDesign:Card x:Name="MyCard" TextElement.FontSize="14" TextElement.FontWeight="Medium" TextElement.Foreground="White" FontFamily="{materialDesign:MaterialDesignFont}" VerticalAlignment="Bottom" Focusable="False">
        <materialDesign:Card.Background>
            <SolidColorBrush Color="{Binding FL.PlayerConfig.Video.BackgroundColor}" Opacity="0.15"/>
        </materialDesign:Card.Background>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Grid Margin="5,0,5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <!-- Current Time | Slider | Duration -->
                <TextBlock Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding FL.Player.CurTime, Converter={StaticResource TicksToTimeConv}}" d:Text="00:00:00"/>
                <Slider
                    Grid.Column="1"
                    TickPlacement="{Binding FL.Player.Chapters, Converter={StaticResource ChaptersToTickPlacementConv}}"
                    Ticks="{Binding FL.Player.Chapters, Converter={StaticResource ChaptersToTicksConv}}"
                    IsSelectionRangeEnabled="True" SelectionStart="{Binding RelativeSource={RelativeSource Self}, Path=Value, Mode=OneWay}" Style="{DynamicResource FlyleafSlider}" Focusable="False" Margin="10,0,10,0" VerticalAlignment="Center" Value="{Binding FL.Player.CurTime, Mode=TwoWay, Converter={StaticResource TicksToSecondsConv}}" Maximum="{Binding FL.Player.Duration, Converter={StaticResource TicksToSecondsConv}}">
                    <b:Interaction.Behaviors>
                        <local:SliderToolTipBehavior Chapters="{Binding FL.Player.VideoDemuxer.Chapters}" />
                    </b:Interaction.Behaviors>
                    <Slider.SelectionEnd>
                        <MultiBinding Converter="{StaticResource SumConv}">
                            <Binding Path="SelectionStart" RelativeSource="{RelativeSource Self}" Mode="OneWay"/>
                            <Binding Path="FL.Player.BufferedDuration" Converter="{StaticResource TicksToSecondsConv}" Mode="OneWay"/>
                        </MultiBinding>
                    </Slider.SelectionEnd>
                </Slider>
                <!-- Remaining time -->
                <!-- TODO: L: config -->
                <TextBlock Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center"
                           d:Text="-00:00:00">
                    <TextBlock.Text>
                        <Binding
                            StringFormat="-{0}"
                            Path="FL.Player.RemainingDuration"
                            Converter="{StaticResource TicksToTimeConv}"/>
                    </TextBlock.Text>
                </TextBlock>
            </Grid>

            <Grid Grid.Row="1" Margin="0,0,0,0">
                <Grid.Resources>
                    <ResourceDictionary>
                        <Style x:Key="IconButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
                            <Setter Property="Width" Value="32"/>
                            <Setter Property="Height" Value="32"/>
                            <Setter Property="Focusable" Value="False"/>
                        </Style>
                    </ResourceDictionary>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <!-- Play / Pause Button -->
                <Button Grid.Column="0" Command="{Binding FL.Player.Commands.TogglePlayPause}" ToolTip="Play / Pause">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                            <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Play}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FL.Player.Status}" Value="Playing">
                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Pause}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Subtitles Primary Button -->
                <Button Click="ButtonBase_OnClick" Grid.Column="1" Content="{materialDesign:PackIcon Kind=CcOutline}" ToolTip="Primary Subtitles">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu ItemsSource="{StaticResource MenuSubtitlesStreams}" Style="{StaticResource FlyleafContextMenu}"/>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Click">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Subtitles Secondary Button -->
                <Button Click="ButtonBase_OnClick" Grid.Column="2" Foreground="{DynamicResource MaterialDesignBody}" Content="{materialDesign:PackIcon Kind=CcOutline}" ToolTip="Secondary Subtitles">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu ItemsSource="{StaticResource MenuSubtitlesStreams2}" Style="{StaticResource FlyleafContextMenu}"/>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Click">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Click="ButtonBase_OnClick" Grid.Column="3" Foreground="{DynamicResource MaterialDesignBody}" Content="{materialDesign:PackIcon Kind=MusicBoxOutline}" ToolTip="Audio Streams">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu ItemsSource="{StaticResource MenuAudioStreams}" Style="{StaticResource FlyleafContextMenu}"/>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <EventTrigger RoutedEvent="Click">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="ContextMenu.IsOpen">
                                                    <DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="True"/>
                                                </BooleanAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Quality + Movies Title -->
                <StackPanel Grid.Column="4" Orientation="Horizontal">
                    <Button Click="ButtonBase_OnClick" ToolTip="Video Streams">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                                <Setter Property="Content" Value="{materialDesign:PackIcon Kind=QualityLow}"/>
                                <Setter Property="ContextMenu">
                                    <Setter.Value>
                                        <ContextMenu ItemsSource="{StaticResource MenuVideoStreams}" Style="{StaticResource FlyleafContextMenu}"/>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding FL.Player.Video.Height, Converter={StaticResource QualityToLevelsConv}}" Value="Low">
                                        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=QualityLow}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding FL.Player.Video.Height, Converter={StaticResource QualityToLevelsConv}}" Value="Med">
                                        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=QualityMedium}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding FL.Player.Video.Height, Converter={StaticResource QualityToLevelsConv}}" Value="High">
                                        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=QualityHigh}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding FL.Player.Video.Height, Converter={StaticResource QualityToLevelsConv}}" Value="_4K">
                                        <Setter Property="Content" Value="{materialDesign:PackIcon Kind=Video4kBox}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <materialDesign:PackIcon Kind="VideoInputAntenna" Height="20" Width="20" Foreground="{DynamicResource MaterialDesign.Brush.Secondary}" VerticalAlignment="Center" Visibility="{Binding FL.Player.IsLive, Converter={StaticResource BooleanToVisibilityConv}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"/>
                    <TextBlock VerticalAlignment="Center" FontStyle="Italic" FontSize="14" Margin="5,4,0,0" Text="{Binding FL.Player.Playlist.Selected.Title}" Cursor="Hand">
                        <TextBlock.ToolTip>
                            <ToolTip xml:space="preserve">Left Click: Open File Dialog
Right Click: Open Context Menu</ToolTip>
                        </TextBlock.ToolTip>
                        <TextBlock.InputBindings>
                            <MouseBinding Command="{Binding FL.Player.Commands.OpenFromFileDialog}" MouseAction="LeftClick" />
                        </TextBlock.InputBindings>
                        <TextBlock.ContextMenu>
                            <ContextMenu Style="{StaticResource FlyleafContextMenu}" Opened="OnContextMenuOnOpened" Closed="OnContextMenuOnClosed" MouseMove="OnContextMenuOnMouseMove">
                                <MenuItem Header="Open next" Command="{Binding FL.Action.CmdOpenNextFile}" />
                                <MenuItem Header="Open prev" Command="{Binding FL.Action.CmdOpenPrevFile}" />
                                <MenuItem Header="Open path" Command="{Binding FL.Action.CmdOpenCurrentPath}" />
                                <MenuItem Header="Copy path" Command="{Binding FL.Player.Commands.CopyToClipboard}" />
                            </ContextMenu>
                        </TextBlock.ContextMenu>
                    </TextBlock>
                </StackPanel>

                <Button Grid.Column="5" Content="{materialDesign:PackIcon Kind=SkipPrevious}" Command="{Binding FL.Player.Commands.Reopen}" CommandParameter="{Binding FL.Player.Playlist.PrevItem}" ToolTip="Previous Playlist Item">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FL.Player.Playlist.PrevItem}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Grid.Column="6" Content="{materialDesign:PackIcon Kind=SkipNext}" Command="{Binding FL.Player.Commands.Reopen}" CommandParameter="{Binding FL.Player.Playlist.NextItem}" ToolTip="Next Playlist Item">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FL.Player.Playlist.NextItem}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Volume Button (Mute/Unmute) -->
                <Button Grid.Column="7" Foreground="{DynamicResource MaterialDesignBody}" Command="{Binding FL.Player.Commands.ToggleMute}" ToolTip="Mute / Unmute">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                            <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VolumeHigh}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FL.Player.Audio.Volume, Converter={StaticResource VolumeToLevelsConv}}" Value="Mute">
                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VolumeMute}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding FL.Player.Audio.Volume, Converter={StaticResource VolumeToLevelsConv}}" Value="Low">
                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VolumeLow}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding FL.Player.Audio.Volume, Converter={StaticResource VolumeToLevelsConv}}" Value="Med">
                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VolumeMedium}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding FL.Player.Audio.Mute}" Value="True">
                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=VolumeMute}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Volume Slider -->
                <Slider Grid.Column="8" Style="{DynamicResource FlyleafSlider}" Foreground="{DynamicResource MaterialDesignBody}" Focusable="False" Margin="0,0,6,6" Width="100" VerticalAlignment="Bottom" Minimum="0" Maximum="{Binding FL.PlayerConfig.Player.VolumeMax, Mode=OneWay}" d:Maximum="150" d:Value="75" Value="{Binding FL.Player.Audio.Volume}"/>

                <!-- Open Settings Button -->
                <Button Grid.Column="9" Style="{StaticResource IconButton}" Content="{materialDesign:PackIcon Kind=SettingsOutline}" Command="{Binding FL.Action.CmdOpenWindowSettings}" ToolTip="Open Settings"/>

                <!-- Toggle Sub Sidebar -->
                <Button Grid.Column="10" Command="{Binding FL.Action.CmdToggleSidebar}" ToolTip="Toggle Sub Sidebar">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource IconButton}">
                            <Setter Property="Content" Value="{materialDesign:PackIcon Kind=DockRight}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding FL.Config.SidebarLeft}" Value="True">
                                    <Setter Property="Content" Value="{materialDesign:PackIcon Kind=DockLeft}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Toggle Fullscreen Button -->
                <ToggleButton Grid.Column="11" Style="{StaticResource MaterialDesignActionToggleButton}" Foreground="{DynamicResource MaterialDesign.Brush.Primary}" Background="Transparent" Focusable="False" IsChecked="{Binding FL.Player.Host.IsFullScreen}" Content="{materialDesign:PackIcon Kind=Fullscreen, Size=28}" materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=FullscreenExit, Size=28}" ToolTip="Toggle Fullscreen"/>
            </Grid>
        </Grid>
    </materialDesign:Card>
</UserControl>
